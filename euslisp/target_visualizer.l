#!/usr/bin/env roseus

(ros::roseus-add-msgs "ball_state_msgs")
(ros::roseus-add-msgs "visualization_msgs")
(ros::roseus "target-visualizer")
(defclass cb-class
  :super propertied-object
  :slots ())
(defmethod cb-class
  (:init ()
         (ros::advertise "/pointgrey/orbit_simulation"
                  visualization_msgs::MarkerArray)
         (ros::subscribe "/pointgrey/estimated_ball_state" ball_state_msgs::PosAndVelWithCovarianceStamped #'send self :update-cb))
  (:update-cb
    (msg)
    (setq header (send msg :header))
    (setq x (send msg :point :x))
    (setq y (send msg :point :y))
    (setq z (send msg :point :z))
    (setq vx (send msg :velocity :x))
    (setq vy (send msg :velocity :y))
    (setq vz (send msg :velocity :z))
    (setq var (send msg :pos_and_vel_covariance))
    (setq markers '())
    (setq sim-t 0.0)
    (setq sim-z z)
    (setq rate 100)
    (setq marker-id 0)
    (print "update-cb")
    (while (>= sim-z 0.0)
           (print "sim update")
           (setq sim-x (+ x (* vx sim-t)))
           (setq sim-y (+ y (* vy sim-t)))
           (setq sim-z (+ z (* vz sim-t) (* -4.9 sim-t sim-t)))
           (setq sim-t (+ sim-t (/ 1.0 rate)))
           (setq marker (instance visualization_msgs::Marker :init))
           (send marker :header :frame_id "ground")
           (send marker :header :stamp (ros::time-now))
           (send marker :id (setq marker-id (+ marker-id 1)))
           (send marker :type 2) ;; this is SPHERE according to visualization_msgs/msg/Marker.msg
           (send marker :action 0)
           (send marker :lifetime (instance ros::time :init :nsec 10000))
           (setq pos (instance geometry_msgs::Point :init :x sim-x :y sim-y :z sim-z))
           (setq ori (instance geometry_msgs::Quaternion :init :w 1 :x 0 :y 0 :z 0))
           (send marker :pose (instance geometry_msgs::Pose :init :position pos :orientation ori))
           (send marker :scale (instance geometry_msgs::Vector3 :init :x 0.067 :y 0.067 :z 0.067))
           (send marker :color (instance std_msgs::ColorRGBA :init :r 1 :g 1 :b 1 :a 1))
           (push marker markers))
    (setq orbit (instance visualization_msgs::MarkerArray :init :markers markers))
    (ros::publish "/pointgrey/orbit_simulation" orbit)))

(setq sub (instance cb-class :init))
(while (ros::ok) (ros::spin-once) (ros::sleep))
